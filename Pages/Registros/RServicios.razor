@page "/RServicios"
@inject ServiciosBLL serviciosBLL

@inject NotificationService notification

 <h3 class="text-center mt-5">Registrar servicio</h3>

 <EditForm Model="@servicio" OnValidSubmit="Guardar">
    <div class="card shadow-lg">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    Registro de servicios
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                        class="bi bi-truck" viewBox="0 0 16 16">
                        <path
                            d="M0 3.5A1.5 1.5 0 0 1 1.5 2h9A1.5 1.5 0 0 1 12 3.5V5h1.02a1.5 1.5 0 0 1 1.17.563l1.481 1.85a1.5 1.5 0 0 1 .329.938V10.5a1.5 1.5 0 0 1-1.5 1.5H14a2 2 0 1 1-4 0H5a2 2 0 1 1-3.998-.085A1.5 1.5 0 0 1 0 10.5v-7zm1.294 7.456A1.999 1.999 0 0 1 4.732 11h5.536a2.01 2.01 0 0 1 .732-.732V3.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .294.456zM12 10a2 2 0 0 1 1.732 1h.768a.5.5 0 0 0 .5-.5V8.35a.5.5 0 0 0-.11-.312l-1.48-1.85A.5.5 0 0 0 13.02 6H12v4zm-9 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm9 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z" />
                    </svg>
                </h3>
            </div>

            <div class="card-body">
                <hr>

                <div class="row">
                    <div class="col-3">
                        <label>ServicioId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="servicio.ServicioId" class="form-control " />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-lg btn-primary" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-3">
                        <label>Fecha Servicio</label>
                        <InputDate @bind-Value="servicio.FechaServicio" class="form-control col-8 bg-fechasColor" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-3">
                        <label>Nombre Servicio</label>
                        <InputText @bind-Value="servicio.NombreServicio" placeholder="Nombre Servicio" class="form-control" />
                        <ValidationMessage For="@(() => servicio.NombreServicio)" />
                    </div>

                    <div class="col-3">
                        <label>Precio Servicio</label>
                        <InputNumber @bind-Value="servicio.PrecioServicio" class="form-control" />
                        <ValidationMessage For="@(() => servicio.PrecioServicio)" />
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <div class="form-group text-left">
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo" title="Nuevo servicio">
                    <span class="oi oi-file"> Nuevo</span>
                </button>

                <button type="submit" class="btn btn-lg btn-success" title="Guardar servicio">
                    <span class="oi oi-document"> Guardar</span>
                </button>

                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar" title="Eliminar servicio">
                    <span class="oi oi-trash"> Eliminar</span>
                </button>
            </div>
        </div>
    </div>
</EditForm>


@code {

  [Parameter]
  public int ServicioId { get; set; }

  private Servicio servicio = new Servicio();
  public List<Servicio> lista { get; set; } = new List<Servicio>();

  protected override void OnInitialized()
  {
    // lista = serviciosBLL.GetList();
    servicio.ServicioId = 0;
    servicio.FechaServicio = DateTime.Now;
    if (ServicioId > 0)
    {
      servicio.ServicioId = ServicioId;
      Buscar();
    }
  }
  void Buscar()
  {
    var encontrado = serviciosBLL.Buscar(servicio.ServicioId);
    if (encontrado != null)
    {
      servicio = encontrado;
      this.servicio = encontrado;
      notification.ShowNotification("Registro encontrado", NotificationSeverity.Success);
    }
    else
    {
      notification.ShowNotification("Registro no encontrado", NotificationSeverity.Warning);
    }
  }
  void Nuevo()
  {
    this.servicio = new Servicio();
     notification.ShowNotification("Nueva plantilla", NotificationSeverity.Success);

  }
  void Guardar()
  {
    if (serviciosBLL.Guardar(servicio))
    {
      Nuevo();
      notification.ShowNotification("Guardado correctamente.");
    }
    else
    {
       notification.ShowNotification("No fue guardado.", NotificationSeverity.Error);
    }
  }
  void Eliminar()
  {
    if (serviciosBLL.Eliminar(servicio.ServicioId))
    {
      Nuevo();
      notification.ShowNotification("Eliminado correctamente.");
    }
    else if(servicio.ServicioId == 0)
    {
      notification.ShowNotification("No fue eliminado.", NotificationSeverity.Error);
    }
  }
}
